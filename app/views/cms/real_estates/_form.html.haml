= form_for [:cms, @real_estate] do |f|
  = render 'cms/shared/errors', :model => @real_estate

  %fieldset
    .control-group.mandatory
      = f.label :language
      .controls
        = f.select :language, I18n.available_locales.map {|l| [t("languages.#{l}"), l] }

    .control-group.mandatory
      = f.label :office_id
      .controls
        = f.collection_select :office_id, Office.all, :id, :label

    .control-group.mandatory
      = f.label :offer
      .controls.push-inline-labels-down
        %label.inline.radio
          = f.radio_button :offer, Offer::RENT
          %span= t(".#{Offer::RENT}")

      .controls.push-inline-labels-down
        %label.inline.radio
          = f.radio_button :offer, Offer::SALE
          %span= t(".#{Offer::SALE}")

    .control-group.mandatory
      = f.label :utilization
      .controls
        = f.select :utilization, utilization_select_options, :class => 'span8'

    .control-group.mandatory
      = f.label :category_id
      .controls
        = f.select :category_id, options_for_select(category_options_for_utilization(@real_estate.utilization), selected_key = f.object.category_id), :class => 'span8'

    .building-type-container{ class: @real_estate.category.try(:name) == 'row_house' ? '' : 'hidden'}
      .control-group
        = f.label :building_type
        .controls
          %label.radio
            = f.radio_button :building_type, RealEstate::BUILDING_CORNER_HOUSE
            %span= t(".#{RealEstate::BUILDING_CORNER_HOUSE}")
          %label.radio
            = f.radio_button :building_type, RealEstate::BUILDING_MIDDLE_HOUSE
            %span= t(".#{RealEstate::BUILDING_MIDDLE_HOUSE}")

    - if accessible?(:utilization_description)
      .control-group
        = f.label :utilization_description
        .controls
          = f.text_area :utilization_description, :class => 'span8 short'
          %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => RealEstate.human_attribute_name(:utilization_description), 'data-content' => t('.help_popover.utilization_description') }

    .control-group
      = render 'form_channels', form: f

    .control-group
      = f.label :link_url
      .controls
        = f.text_field :link_url, :class => 'span8'

    .control-group
      = f.label :contact_id
      .controls
        = f.select :contact_id, Employee.all.order([:lastname, :asc]).map { |e| [e.fullname_reversed, e.id]}, :prompt => 'Kontaktperson auswÃ¤hlen', :class => 'span8'

  %fieldset
    = render 'form_title_description', form: f

  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = render 'cms/real_estates/actions'
