= form_for [:cms, @real_estate] do |f|
  = render 'cms/shared/errors', :model => @real_estate

  %fieldset
    .control-group.mandatory
      = f.label :category_id
      .controls
        = f.grouped_collection_select :category_id, Category.top_level, :categories, :label, :id, :label
    - if @real_estate.row_house?
      .control-group
        = f.label :building_type
        .controls
          %label.radio
            = f.radio_button :building_type, RealEstate::BUILDING_CORNER_HOUSE
            %span= t(".#{RealEstate::BUILDING_CORNER_HOUSE}")
          %label.radio
            = f.radio_button :building_type, RealEstate::BUILDING_MIDDLE_HOUSE
            %span= t(".#{RealEstate::BUILDING_MIDDLE_HOUSE}")
    .control-group.mandatory
      = f.label :offer
      .controls
        %label.radio
          = f.radio_button :offer, RealEstate::OFFER_FOR_RENT
          %span= t(".#{RealEstate::OFFER_FOR_RENT}")
        %label.radio
          = f.radio_button :offer, RealEstate::OFFER_FOR_SALE
          %span= t(".#{RealEstate::OFFER_FOR_SALE}")
    .control-group.mandatory
      = f.label :utilization
      .controls
        %label.radio
          = f.radio_button :utilization, RealEstate::UTILIZATION_PRIVATE
          %span= t(".#{RealEstate::UTILIZATION_PRIVATE}")
        %label.radio
          = f.radio_button :utilization, RealEstate::UTILIZATION_COMMERICAL
          %span= t(".#{RealEstate::UTILIZATION_COMMERICAL}")
    .control-group
      = f.label :is_first_marketing
      .controls
        %label.checkbox
          = f.check_box :is_first_marketing
    .control-group
      = f.label :channels
      .controls
        - RealEstate::CHANNELS.each do |channel|
          %label.checkbox
            = check_box_tag "real_estate[channels][]", channel, @real_estate.channels.include?(channel)
            %span= t(".channels.#{channel}")
  .control-group
    = f.label :contact
    .controls
      = f.select :contact, Employee.all.order([:lastname, :asc]).map { |e| [e.fullname_reversed, e.id]}, :prompt => 'Kontaktperson auswÃ¤hlen', :class => 'span8'
  %fieldset
    %legend Titel und Beschreibungen
    .control-group.mandatory
      = f.label :title
      .controls
        = f.text_field :title, :class => 'span8'
    .control-group.mandatory
      = f.label :description
      .controls
        = f.text_area :description, :class => 'span8'
    .control-group
      = f.label :property_name
      .controls
        = f.text_field :property_name, :class => 'span8'
    .control-group
      = f.label :short_description
      .controls
        = f.text_area :short_description, :class => 'span8 short'
    .control-group
      = f.label :keywords
      .controls
        = f.text_area :keywords, :class => 'span8 short'
    .control-group
      = f.label :utilization_description
      .controls
        = f.text_area :utilization_description, :class => 'span8 short'
  %fieldset
    %legend= Reference.model_name.human
    = f.fields_for @real_estate.reference do |rf|
      .control-group
        = rf.label :property_key
        .controls
          = rf.text_field :property_key, :class => 'span8'
          %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => Reference.human_attribute_name(:property_key), 'data-content' => t('.help_popover.property_key') }
      .control-group
        = rf.label :building_key
        .controls
          = rf.text_field :building_key, :class => 'span8'
          %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => Reference.human_attribute_name(:building_key), 'data-content' => t('.help_popover.building_key') }
      .control-group
        = rf.label :unit_key
        .controls
          = rf.text_field :unit_key, :class => 'span8'
          %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => Reference.human_attribute_name(:unit_key), 'data-content' => t('.help_popover.unit_key') }
  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = render 'cms/real_estates/actions'
