= form_for [:cms, @real_estate] do |f|
  = render 'cms/shared/errors', :model => @real_estate

  %fieldset
    .control-group.mandatory
      = f.label :office_id
      .controls
        = f.collection_select :office_id, Office.all, :id, :label
    
    .control-group.mandator
      = f.label :offer
      .controls.push-inline-labels-down
        %label.inline.radio
          = f.radio_button :offer, Offer::RENT
          %span= t(".#{Offer::RENT}")
      .controls.push-inline-labels-down
        %label.inline.radio
          = f.radio_button :offer, Offer::SALE
          %span= t(".#{Offer::SALE}")
    .control-group.mandatory
      = f.label :utilization
      .controls
        = f.select :utilization, utilization_select_options, :class => 'span8'

    .control-group.mandatory
      = f.label :category_id
      .controls
        = f.select :category_id, Category.where(utilization: @real_estate.utilization).map { |c|[c.label, c.id] }, :class => 'span8'
    .building-type-container.hidden{ 'data-dependent_on' => '#real_estate_category_id', 'data-dependent_on_value' => Category.where(:name => 'row_house').first.try(:id) }
      .control-group
        = f.label :building_type
        .controls
          %label.radio
            = f.radio_button :building_type, RealEstate::BUILDING_CORNER_HOUSE
            %span= t(".#{RealEstate::BUILDING_CORNER_HOUSE}")
          %label.radio
            = f.radio_button :building_type, RealEstate::BUILDING_MIDDLE_HOUSE
            %span= t(".#{RealEstate::BUILDING_MIDDLE_HOUSE}")

    .control-group
      = f.label :channels
      - RealEstate::CHANNELS.each do |channel|
        .controls.push-inline-labels-down
          %label.inline.checkbox
            = check_box_tag "real_estate[channels][]", channel, @real_estate.channels.include?(channel), :class => channel
            %span= t(".channels.#{channel}")
    .microsite-options-container.hidden{ 'data-dependent_on' => '.microsite', 'data-dependent_on_value' => 'true' }
      .control-group
        .controls
          = f.select :microsite_building_project, microsite_select_options, :prompt => 'Microsite auswählen', :class => 'span8'
  .control-group
    = f.label :contact_id
    .controls
      = f.select :contact_id, Employee.all.order([:lastname, :asc]).map { |e| [e.fullname_reversed, e.id]}, :prompt => 'Kontaktperson auswählen', :class => 'span8'

  %fieldset
    - if accessible?(:title)
      %legend Titel und Beschreibungen
    - else
      %legend Beschreibungen
    - if accessible?(:title)
      .control-group{ :class => "#{@real_estate.parking? ? '' : 'mandatory'}" }
        = f.label :title
        .controls
          = f.text_field :title, :class => 'span8'
    - if accessible?(:description)
      .control-group{ :class => "#{@real_estate.parking? ? '' : 'mandatory'}" }
        = f.label :description
        .controls
          = f.text_area :description, :class => 'span8'
    - if accessible?(:utilization_description)
      .control-group
        = f.label :utilization_description
        .controls
          = f.text_area :utilization_description, :class => 'span8 short'
  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = render 'cms/real_estates/actions'
