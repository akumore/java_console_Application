= render 'wizard_header'

= render_navigation :context => :real_estate

= form_for @address, :url => cms_real_estate_address_path(@real_estate) do |f|
  = render 'cms/shared/errors', :model => @address

  %fieldset
    .control-group.mandatory
      = f.label :street
      .controls
        = f.text_field :street, :class => 'span8'
    .control-group
      = f.label :street_number
      .controls
        = f.text_field :street_number, :class => 'span3'
    .control-group.mandatory
      = f.label :zip
      .controls
        = f.text_field :zip, :class => 'span2'
    .control-group.mandatory
      = f.label :city
      .controls
        = f.text_field :city, :class => 'span8'
    .control-group.mandatory
      = f.label :canton
      .controls
        = f.select :canton, Address::CANTONS.map { |c| [t("cantons.#{c}"), c] }, :prompt => 'Kanton auswählen', :class => 'span8'
    .control-group
      = f.label :link_url
      .controls
        = f.text_field :link_url, :class => 'span8'
  - if @real_estate.is_homegate?
    %fieldset
      %legend= Reference.model_name.human
      .control-group
        .controls
          .help-block.bold-black= t('.help_reference_numbers')
      = f.fields_for @address.reference do |rf|
        .control-group
          = rf.label :property_key
          .controls
            = rf.text_field :property_key, :class => 'span8'
            %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => Reference.human_attribute_name(:property_key), 'data-content' => t('.help_popover.property_key') }
        .control-group
          = rf.label :building_key
          .controls
            = rf.text_field :building_key, :class => 'span8'
            %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => Reference.human_attribute_name(:building_key), 'data-content' => t('.help_popover.building_key') }
        .control-group
          = rf.label :unit_key
          .controls
            = rf.text_field :unit_key, :class => 'span8'
            %i.icon-question-sign.help-popover{ :rel => 'popover', 'data-original-title' => Reference.human_attribute_name(:unit_key), 'data-content' => t('.help_popover.unit_key') }
  %fieldset.push-checkboxes-down
    %legend= t "mongoid.attributes.address.location"
    .control-group
      = f.label :manual_geocoding
      .controls
        = f.check_box :manual_geocoding
    .automated-geocoordinates-container.hidden{ 'data-dependent_on' => '#address_manual_geocoding', 'data-dependent_on_value' => 'false' }
      = f.fields_for :location, @address.to_coordinates do |rf|
        .control-group
          = rf.label :first, t("mongoid.attributes.address.lat")
          .controls
            = rf.text_field :first, :class => 'span8', :readonly => true
        .control-group
          = rf.label :last, t("mongoid.attributes.address.lng")
          .controls
            = rf.text_field :last, :class => 'span8', :readonly => true
    .manual-geocoordinates-container.hidden{ 'data-dependent_on' => '#address_manual_geocoding', 'data-dependent_on_value' => 'true' }
      .control-group.mandatory
        = f.label :lat, t("mongoid.attributes.address.lat")
        .controls
          = f.text_field :lat, :class => 'span8'
      .control-group.mandatory
        = f.label :lng, t("mongoid.attributes.address.lng")
        .controls
          = f.text_field :lng, :class => 'span8'
      .control-group
        .controls
          .row
            .well.span8
              %h3 Wie finde ich Geokoordinaten einer nicht vorhandenen Adresse?
              %ol
                %li Unter <a href="https://maps.google.ch" target="_blank">maps.google.ch</a> einen Ort auf der Karte auswählen.
                %li Rechtsklick auf die Karte und «<em>Was ist hier?</em>» klicken.
                %li Links oben im Suchfeld neben dem Google Logo werden die Koordinaten ausgegeben.
                %li Erste Zahl vor dem Komma ist der Breitengrad, die Zahl nach dem Komma ist der Längengrad.
                %li Koordinaten in die entsprechenden Felder im Eingabetool kopieren.
  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = render 'cms/real_estates/actions'
