= render 'search_filter'

.search-container.clearfix

  %h2
    = t '.hits', :count=>@real_estates.size

  .container.clearfix
    .search-results
      %table
        - if @real_estates.count > 0
          = render 'search_filter_order'
        %tbody
          - @real_estates.each do |real_estate|
            %tr{ :id => "real-estate-#{real_estate.id}" }
              %td
                = link_to image_tag(real_estate.images.primary.file.thumb.url), real_estate_path(real_estate, @search_filter.to_params)
              %td
                .title
                  = real_estate.title
                .col.first
                  = real_estate.category.label
                  %br
                  = real_estate.address.street
                  %br
                  = real_estate.address.extended_city
                .col.middle
                  = real_estate.pricing.list_price
                  %br
                  - if real_estate.figure.try(:rooms).present?
                    = real_estate.figure.rooms
                    %br
                  - if real_estate.figure.try(:floor).present?
                    = real_estate.figure.floor
                .col.last
                  - if real_estate.information.present?
                    = real_estate.information.available_from_compact
                    %br
                  - if real_estate.figure.try(:surface).present?
                    = real_estate.figure.surface
                .clear


    - if @real_estates.any?
      .map.search-results-map

  - unless @reference_projects.empty?
    .container.reference-projects-slider
      = render 'slider', :projects => @reference_projects

- if @real_estates.any?
  = render 'google_maps'

  - content_for :javascripts do
    :javascript
      $(function(){
        new AlfredMueller.Views.Map({
          el: $(".map"),
          real_estates: new AlfredMueller.Collections.RealEstates(#{@real_estates.map(&:model).to_json(:only => :_id, :methods => :coordinates)})
        })
      })
